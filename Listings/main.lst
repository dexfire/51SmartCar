C51 COMPILER V9.57.0.0   MAIN                                                              06/30/2018 12:48:58 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "xunji.h"
   2          #include <intrins.h>
   3          
   4          /**
   5           *    51循迹小车
   6           *    基本流程：
   7           *      T0 -> 负责对驱动输出进行控制
   8           *         -> 外层循环[T=20*50us=12.8ms]：time 超过 20 溢出为 0 (@output())
   9           *         -> 内层循环[T=50us]：按照当前模式，循环PWM输出
  10           *         -> PWM ：
  11           *            -> 直行：0         ~    left_time     ~    right_time      ~      20(回0) 
  12           *            ->     左右轮开   [直行]   左轮停     [左转]   右轮停     [空档滑行]   左右轮开
  13           *            -> 左转：0         ~    left_time     ~    right_time      ~      20(回0) 
  14           *            ->     左右轮开   [直行]   左轮停     [左转]   右轮停     [空档滑行]   左右轮开
  15           *            -> 右转：0         ~    right_time     ~    left_time      ~      20(回0) 
  16           *            ->   左右轮开   [直行]   右轮停     [右转]   左轮停     [空档滑行]   左右轮开
  17           *      T1 -> 负责进行流程控制
  18           *         -> 循迹 & 探测
  19           *         -> 切换模式： 十字路口 - 大偏转 - 小偏转
  20           *          -> 十字路口：判断转弯方向
  21           *          -> 偏转：切换输出模式
  22           * 
  23           */
  24          
  25          
  26          void main()
  27          {
  28   1        init();
  29   1        while(1){
  30   2          key_control();
  31   2          set_display_now();
  32   2          //get_wheel_steps();
  33   2          //OLED_Display();
  34   2        }
  35   1      }
  36          
  37          /**
  38           *   定时器 0 中断函数
  39           *   1、循环计时
  40           *   2、output() : 根据当前时间（0~255） 进行左右转
  41           *  
  42           * 
  43           */
  44          void T0_time() interrupt 1     //T0定时中断函数
  45          {
  46   1        TR0=0;                      //关闭T0中断
  47   1        time++;
  48   1        output();                  //输出
  49   1        TR0=1;                //开启T0中断
  50   1      }
  51          
  52          /**
  53           *    定时器 1 中断函数
  54           *    1、
C51 COMPILER V9.57.0.0   MAIN                                                              06/30/2018 12:48:58 PAGE 2   

  55           * 
  56           * 
  57           */
  58          
  59          void T1_time() interrupt 3   //T1定时中断函数
  60          {
  61   1        TR1=0; 
  62   1      
  63   1        infrared();
  64   1        
  65   1        TH1=_iror_(65536-(*current_time_config).sensitivity,8);                 //12M，定时1.5ms
  66   1        TL1=(65536-(*current_time_config).sensitivity); 
  67   1        TR1=1;
  68   1      }
  69          
  70          // void T2_time() interrupt 5   //T2定时中断函数
  71          // {
  72          //  TF2 = 0;
  73          //  runtime++;
  74          //  // 防止 runtime 溢出时tune_time始终大于runtime造成 一直无法加速 的情况
  75          //  if(runtime==0)tune_time=0;
  76          // }
  77          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
